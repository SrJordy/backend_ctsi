{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/lib/Prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;uCAEhB"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/service/CitaServices.ts"],"sourcesContent":["import prisma from \"@/lib/Prisma\";\r\nimport { citamedica } from \"@prisma/client\";\r\n\r\nexport const getAllCitas = async (): Promise<citamedica[]> => {\r\n    return await prisma.citamedica.findMany({\r\n        include: {\r\n            profesion: true,\r\n            persona: true,\r\n        },\r\n    });\r\n};\r\n\r\nexport const getCita = async (id: number): Promise<citamedica | null> => {\r\n    const cita = await prisma.citamedica.findUnique({\r\n        where: { cod_cita: id },\r\n        include: {\r\n            profesion: true,\r\n            persona: true,\r\n        },\r\n    });\r\n    if (!cita) throw new Error(\"Cita no encontrada\");\r\n    return cita;\r\n};\r\n\r\nexport const createCita = async (\r\n    data: Omit<citamedica, \"cod_cita\" | \"status\">\r\n): Promise<citamedica> => {\r\n    const { profesional_id, persona_id, fechahora, lugar, motivo } = data;\r\n    if (!profesional_id || !persona_id || !fechahora || !lugar || !motivo)\r\n        throw new Error(\"Faltan datos requeridos\");\r\n    const profesionalExists = await prisma.usuario.findUnique({\r\n        where: { cod_usuario: profesional_id },\r\n    });\r\n    if (!profesionalExists) throw new Error(\"El profesional no existe\");\r\n    const personaExists = await prisma.paciente.findUnique({\r\n        where: { cod_paciente: persona_id },\r\n    });\r\n    if (!personaExists) throw new Error(\"La persona no existe\");\r\n    return await prisma.citamedica.create({\r\n        data,\r\n    });\r\n};\r\n\r\nexport const updateCita = async (\r\n    id: number,\r\n    data: Partial<Omit<citamedica, \"cod_cita\">>\r\n): Promise<citamedica> => {\r\n    const existingCita = await prisma.citamedica.findUnique({\r\n        where: { cod_cita: id },\r\n    });\r\n    if (!existingCita) throw new Error(\"Cita no encontrada\");\r\n    if (data.profesional_id) {\r\n        const profesionalExists = await prisma.usuario.findUnique({\r\n            where: { cod_usuario: data.profesional_id },\r\n        });\r\n        if (!profesionalExists) throw new Error(\"El profesional no existe\");\r\n    }\r\n\r\n    if (data.persona_id) {\r\n        const personaExists = await prisma.paciente.findUnique({\r\n            where: { cod_paciente: data.persona_id },\r\n        });\r\n        if (!personaExists) throw new Error(\"La persona no existe\");\r\n    }\r\n\r\n    return await prisma.citamedica.update({\r\n        where: { cod_cita: id },\r\n        data,\r\n    });\r\n};\r\n\r\nexport const deleteCita = async (id: number): Promise<citamedica> => {\r\n    const existingCita = await prisma.citamedica.findUnique({\r\n        where: { cod_cita: id },\r\n    });\r\n    if (!existingCita) throw new Error(\"Cita no encontrada\");\r\n    return await prisma.citamedica.update({\r\n        where: { cod_cita: id },\r\n        data: { status: false },\r\n    });\r\n};\r\n"],"names":[],"mappings":";;;;;;;AAAA;;AAGO,MAAM,cAAc;IACvB,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,UAAU,CAAC,QAAQ,CAAC;QACpC,SAAS;YACL,WAAW;YACX,SAAS;QACb;IACJ;AACJ;AAEO,MAAM,UAAU,OAAO;IAC1B,MAAM,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,UAAU,CAAC,UAAU,CAAC;QAC5C,OAAO;YAAE,UAAU;QAAG;QACtB,SAAS;YACL,WAAW;YACX,SAAS;QACb;IACJ;IACA,IAAI,CAAC,MAAM,MAAM,IAAI,MAAM;IAC3B,OAAO;AACX;AAEO,MAAM,aAAa,OACtB;IAEA,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG;IACjE,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC,QAC3D,MAAM,IAAI,MAAM;IACpB,MAAM,oBAAoB,MAAM,6GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,CAAC;QACtD,OAAO;YAAE,aAAa;QAAe;IACzC;IACA,IAAI,CAAC,mBAAmB,MAAM,IAAI,MAAM;IACxC,MAAM,gBAAgB,MAAM,6GAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;QACnD,OAAO;YAAE,cAAc;QAAW;IACtC;IACA,IAAI,CAAC,eAAe,MAAM,IAAI,MAAM;IACpC,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,UAAU,CAAC,MAAM,CAAC;QAClC;IACJ;AACJ;AAEO,MAAM,aAAa,OACtB,IACA;IAEA,MAAM,eAAe,MAAM,6GAAA,CAAA,UAAM,CAAC,UAAU,CAAC,UAAU,CAAC;QACpD,OAAO;YAAE,UAAU;QAAG;IAC1B;IACA,IAAI,CAAC,cAAc,MAAM,IAAI,MAAM;IACnC,IAAI,KAAK,cAAc,EAAE;QACrB,MAAM,oBAAoB,MAAM,6GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YACtD,OAAO;gBAAE,aAAa,KAAK,cAAc;YAAC;QAC9C;QACA,IAAI,CAAC,mBAAmB,MAAM,IAAI,MAAM;IAC5C;IAEA,IAAI,KAAK,UAAU,EAAE;QACjB,MAAM,gBAAgB,MAAM,6GAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;YACnD,OAAO;gBAAE,cAAc,KAAK,UAAU;YAAC;QAC3C;QACA,IAAI,CAAC,eAAe,MAAM,IAAI,MAAM;IACxC;IAEA,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,UAAU,CAAC,MAAM,CAAC;QAClC,OAAO;YAAE,UAAU;QAAG;QACtB;IACJ;AACJ;AAEO,MAAM,aAAa,OAAO;IAC7B,MAAM,eAAe,MAAM,6GAAA,CAAA,UAAM,CAAC,UAAU,CAAC,UAAU,CAAC;QACpD,OAAO;YAAE,UAAU;QAAG;IAC1B;IACA,IAAI,CAAC,cAAc,MAAM,IAAI,MAAM;IACnC,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,UAAU,CAAC,MAAM,CAAC;QAClC,OAAO;YAAE,UAAU;QAAG;QACtB,MAAM;YAAE,QAAQ;QAAM;IAC1B;AACJ"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/controller/CitaController.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport * as CitaMedicaService from \"@/service/CitaServices\";\r\n\r\nexport const getCitas = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    try {\r\n        const citas = await CitaMedicaService.getAllCitas();\r\n        return res.status(200).json(citas);\r\n    } catch (error) {\r\n        return res.status(500).json({ error: \"Error buscando citas médicas\" });\r\n    }\r\n};\r\n\r\nexport const getCita = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id } = req.query;\r\n    try {\r\n        const cita = await CitaMedicaService.getCita(Number(id));\r\n        return res.status(200).json(cita);\r\n    } catch (error) {\r\n        return res.status(404).json({ error: \"Cita no encontrada\" });\r\n    }\r\n};\r\n\r\nexport const createCita = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    try {\r\n        const { profesional_id, persona_id, fechahora, lugar, motivo } = req.body;\r\n        const newCita = await CitaMedicaService.createCita({\r\n            profesional_id,\r\n            persona_id,\r\n            fechahora: new Date(fechahora),\r\n            lugar,\r\n            motivo,\r\n        });\r\n        return res.status(201).json(newCita);\r\n    } catch (error) {\r\n        return res.status(500).json({ error: \"Error creando cita médica\" });\r\n    }\r\n};\r\n\r\nexport const updateCita = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id } = req.query;\r\n    try {\r\n        const { profesional_id, persona_id, fechahora, lugar, motivo} = req.body;\r\n        const updatedCita = await CitaMedicaService.updateCita(Number(id), {\r\n            profesional_id,\r\n            persona_id,\r\n            fechahora: fechahora ? new Date(fechahora) : undefined,\r\n            lugar,\r\n            motivo\r\n        });\r\n        return res.status(200).json(updatedCita);\r\n    } catch (error) {\r\n        return res.status(500).json({ error: \"Error actualizando cita médica\" });\r\n    }\r\n};\r\n\r\nexport const deleteCita = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id } = req.query;\r\n    try {\r\n        const deletedCita = await CitaMedicaService.deleteCita(Number(id));\r\n        return res.status(200).json({ message: \"Cita eliminada correctamente\", cita: deletedCita });\r\n    } catch (error) {\r\n        return res.status(500).json({ error: \"Error eliminando cita médica\" });\r\n    }\r\n};\r\n"],"names":[],"mappings":";;;;;;;AACA;;AAEO,MAAM,WAAW,OAAO,KAAqB;IAChD,IAAI;QACA,MAAM,QAAQ,MAAM,wHAAkB,WAAW;QACjD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAO;QACZ,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA+B;IACxE;AACJ;AAEO,MAAM,UAAU,OAAO,KAAqB;IAC/C,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;IACxB,IAAI;QACA,MAAM,OAAO,MAAM,wHAAkB,OAAO,CAAC,OAAO;QACpD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAO;QACZ,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAqB;IAC9D;AACJ;AAEO,MAAM,aAAa,OAAO,KAAqB;IAClD,IAAI;QACA,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,IAAI;QACzE,MAAM,UAAU,MAAM,wHAAkB,UAAU,CAAC;YAC/C;YACA;YACA,WAAW,IAAI,KAAK;YACpB;YACA;QACJ;QACA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAO;QACZ,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA4B;IACrE;AACJ;AAEO,MAAM,aAAa,OAAO,KAAqB;IAClD,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;IACxB,IAAI;QACA,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAC,GAAG,IAAI,IAAI;QACxE,MAAM,cAAc,MAAM,wHAAkB,UAAU,CAAC,OAAO,KAAK;YAC/D;YACA;YACA,WAAW,YAAY,IAAI,KAAK,aAAa;YAC7C;YACA;QACJ;QACA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAO;QACZ,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAiC;IAC1E;AACJ;AAEO,MAAM,aAAa,OAAO,KAAqB;IAClD,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;IACxB,IAAI;QACA,MAAM,cAAc,MAAM,wHAAkB,UAAU,CAAC,OAAO;QAC9D,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;YAAgC,MAAM;QAAY;IAC7F,EAAE,OAAO,OAAO;QACZ,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA+B;IACxE;AACJ"}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 230, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/lib/corsMiddleware.ts"],"sourcesContent":["import Cors from 'cors';\r\nimport { NextApiRequest, NextApiResponse } from 'next';\r\n\r\nconst cors = Cors({\r\n  methods: ['GET', 'POST', 'PUT', 'DELETE'],\r\n  origin: '*',\r\n  allowedHeaders: ['Content-Type', 'Authorization'], \r\n  credentials: true, \r\n});\r\n\r\n\r\nfunction runMiddleware(req: NextApiRequest, res: NextApiResponse, fn: Function): Promise<void> {\r\n  return new Promise((resolve, reject) => {\r\n    fn(req, res, (result: Error | void) => {\r\n      if (result instanceof Error) {\r\n        reject(result);\r\n      } else {\r\n        resolve(result);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport default async function corsMiddleware(req: NextApiRequest, res: NextApiResponse) {\r\n  try {\r\n    await runMiddleware(req, res, cors);\r\n  } catch (error) {\r\n    console.error('Error en CORS middleware:', error);\r\n    res.status(500).json({ error: 'Error en el manejo de CORS' });\r\n  }\r\n}\r\n\r\n"],"names":[],"mappings":";;;AAAA;;AAGA,MAAM,OAAO,CAAA,GAAA,iGAAA,CAAA,UAAI,AAAD,EAAE;IAChB,SAAS;QAAC;QAAO;QAAQ;QAAO;KAAS;IACzC,QAAQ;IACR,gBAAgB;QAAC;QAAgB;KAAgB;IACjD,aAAa;AACf;AAGA,SAAS,cAAc,GAAmB,EAAE,GAAoB,EAAE,EAAY;IAC5E,OAAO,IAAI,QAAQ,CAAC,SAAS;QAC3B,GAAG,KAAK,KAAK,CAAC;YACZ,IAAI,kBAAkB,OAAO;gBAC3B,OAAO;YACT,OAAO;gBACL,QAAQ;YACV;QACF;IACF;AACF;AAEe,eAAe,eAAe,GAAmB,EAAE,GAAoB;IACpF,IAAI;QACF,MAAM,cAAc,KAAK,KAAK;IAChC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA6B;IAC7D;AACF"}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/pages/api/ApiCita.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport * as CitaMedicaController from \"@/controller/CitaController\";\r\nimport corsMiddleware from \"@/lib/corsMiddleware\";\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n    await corsMiddleware(req, res);\r\n    const { method } = req;\r\n    const { id } = req.query;\r\n\r\n    switch (method) {\r\n        case \"GET\":\r\n            if (id) return CitaMedicaController.getCita(req, res);\r\n            return CitaMedicaController.getCitas(req, res);\r\n        case \"POST\":\r\n            return CitaMedicaController.createCita(req, res);\r\n        case \"PUT\":\r\n            if (id) return CitaMedicaController.updateCita(req, res);\r\n            return res.status(400).json({ error: \"ID requerido para actualizar una cita\" });\r\n        case \"DELETE\":\r\n            if (id) return CitaMedicaController.deleteCita(req, res);\r\n            return res.status(400).json({ error: \"ID requerido para eliminar una cita\" });\r\n        default:\r\n            return res.status(405).json({ error: \"Método no permitido\" });\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;;;AAEe,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC3E,MAAM,CAAA,GAAA,qHAAA,CAAA,UAAc,AAAD,EAAE,KAAK;IAC1B,MAAM,EAAE,MAAM,EAAE,GAAG;IACnB,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;IAExB,OAAQ;QACJ,KAAK;YACD,IAAI,IAAI,OAAO,6HAAqB,OAAO,CAAC,KAAK;YACjD,OAAO,6HAAqB,QAAQ,CAAC,KAAK;QAC9C,KAAK;YACD,OAAO,6HAAqB,UAAU,CAAC,KAAK;QAChD,KAAK;YACD,IAAI,IAAI,OAAO,6HAAqB,UAAU,CAAC,KAAK;YACpD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAAwC;QACjF,KAAK;YACD,IAAI,IAAI,OAAO,6HAAqB,UAAU,CAAC,KAAK;YACpD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAAsC;QAC/E;YACI,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAAsB;IACnE;AACJ"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,yHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,yHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}