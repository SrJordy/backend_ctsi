{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/lib/Prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;uCAEhB"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/service/TratamientoServices.ts"],"sourcesContent":["import prisma from \"@/lib/Prisma\";\r\nimport { tratamiento } from \"@prisma/client\";\r\n\r\nexport const getAllTratamientos = async (): Promise<tratamiento[]> => {\r\n    return await prisma.tratamiento.findMany({\r\n        include: {\r\n            historial: {\r\n                include: {\r\n                    persona: true,\r\n                    profesional: true,\r\n                }\r\n            }\r\n        },\r\n    });\r\n};\r\n\r\nexport const getTratamiento = async (id: number): Promise<tratamiento | null> => {\r\n    const tratamiento = await prisma.tratamiento.findUnique({\r\n        where: { cod_tratamiento: id },\r\n        include: {\r\n            historial: {\r\n                include: {\r\n                    persona: true,\r\n                    profesional: true,\r\n                }\r\n            }\r\n        },\r\n    });\r\n    if (!tratamiento) throw new Error(\"Tratamiento no encontrado\");\r\n    return tratamiento;\r\n};\r\n\r\nexport const createTratamiento = async (\r\n    data: Omit<tratamiento, \"cod_tratamiento\">\r\n): Promise<tratamiento> => {\r\n    const { descripcion, fechainicio, fechafin, historial_id } = data;\r\n    if (!descripcion || !fechainicio || !fechafin || !historial_id)\r\n        throw new Error(\"Faltan datos requeridos\");\r\n\r\n    const historialExists = await prisma.historialmedico.findUnique({\r\n        where: { cod_historial: historial_id },\r\n    });\r\n    if (!historialExists) throw new Error(\"El historial médico no existe\");\r\n\r\n    // Validar que la fecha de fin sea posterior a la fecha de inicio\r\n    if (new Date(fechafin) <= new Date(fechainicio)) {\r\n        throw new Error(\"La fecha de fin debe ser posterior a la fecha de inicio\");\r\n    }\r\n\r\n    return await prisma.tratamiento.create({\r\n        data,\r\n    });\r\n};\r\n\r\nexport const updateTratamiento = async (\r\n    id: number,\r\n    data: Partial<Omit<tratamiento, \"cod_tratamiento\">>\r\n): Promise<tratamiento> => {\r\n    const existingTratamiento = await prisma.tratamiento.findUnique({\r\n        where: { cod_tratamiento: id },\r\n    });\r\n    if (!existingTratamiento) throw new Error(\"Tratamiento no encontrado\");\r\n\r\n    if (data.historial_id) {\r\n        const historialExists = await prisma.historialmedico.findUnique({\r\n            where: { cod_historial: data.historial_id },\r\n        });\r\n        if (!historialExists) throw new Error(\"El historial médico no existe\");\r\n    }\r\n\r\n    // Validar fechas si se están actualizando\r\n    if (data.fechainicio && data.fechafin) {\r\n        if (new Date(data.fechafin) <= new Date(data.fechainicio)) {\r\n            throw new Error(\"La fecha de fin debe ser posterior a la fecha de inicio\");\r\n        }\r\n    }\r\n\r\n    return await prisma.tratamiento.update({\r\n        where: { cod_tratamiento: id },\r\n        data,\r\n    });\r\n};\r\n\r\nexport const deleteTratamiento = async (id: number): Promise<tratamiento> => {\r\n    const existingTratamiento = await prisma.tratamiento.findUnique({\r\n        where: { cod_tratamiento: id },\r\n    });\r\n    if (!existingTratamiento) throw new Error(\"Tratamiento no encontrado\");\r\n\r\n    return await prisma.tratamiento.delete({\r\n        where: { cod_tratamiento: id },\r\n    });\r\n};"],"names":[],"mappings":";;;;;;;AAAA;;AAGO,MAAM,qBAAqB;IAC9B,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;QACrC,SAAS;YACL,WAAW;gBACP,SAAS;oBACL,SAAS;oBACT,aAAa;gBACjB;YACJ;QACJ;IACJ;AACJ;AAEO,MAAM,iBAAiB,OAAO;IACjC,MAAM,cAAc,MAAM,6GAAA,CAAA,UAAM,CAAC,WAAW,CAAC,UAAU,CAAC;QACpD,OAAO;YAAE,iBAAiB;QAAG;QAC7B,SAAS;YACL,WAAW;gBACP,SAAS;oBACL,SAAS;oBACT,aAAa;gBACjB;YACJ;QACJ;IACJ;IACA,IAAI,CAAC,aAAa,MAAM,IAAI,MAAM;IAClC,OAAO;AACX;AAEO,MAAM,oBAAoB,OAC7B;IAEA,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG;IAC7D,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,YAAY,CAAC,cAC9C,MAAM,IAAI,MAAM;IAEpB,MAAM,kBAAkB,MAAM,6GAAA,CAAA,UAAM,CAAC,eAAe,CAAC,UAAU,CAAC;QAC5D,OAAO;YAAE,eAAe;QAAa;IACzC;IACA,IAAI,CAAC,iBAAiB,MAAM,IAAI,MAAM;IAEtC,iEAAiE;IACjE,IAAI,IAAI,KAAK,aAAa,IAAI,KAAK,cAAc;QAC7C,MAAM,IAAI,MAAM;IACpB;IAEA,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,WAAW,CAAC,MAAM,CAAC;QACnC;IACJ;AACJ;AAEO,MAAM,oBAAoB,OAC7B,IACA;IAEA,MAAM,sBAAsB,MAAM,6GAAA,CAAA,UAAM,CAAC,WAAW,CAAC,UAAU,CAAC;QAC5D,OAAO;YAAE,iBAAiB;QAAG;IACjC;IACA,IAAI,CAAC,qBAAqB,MAAM,IAAI,MAAM;IAE1C,IAAI,KAAK,YAAY,EAAE;QACnB,MAAM,kBAAkB,MAAM,6GAAA,CAAA,UAAM,CAAC,eAAe,CAAC,UAAU,CAAC;YAC5D,OAAO;gBAAE,eAAe,KAAK,YAAY;YAAC;QAC9C;QACA,IAAI,CAAC,iBAAiB,MAAM,IAAI,MAAM;IAC1C;IAEA,0CAA0C;IAC1C,IAAI,KAAK,WAAW,IAAI,KAAK,QAAQ,EAAE;QACnC,IAAI,IAAI,KAAK,KAAK,QAAQ,KAAK,IAAI,KAAK,KAAK,WAAW,GAAG;YACvD,MAAM,IAAI,MAAM;QACpB;IACJ;IAEA,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,WAAW,CAAC,MAAM,CAAC;QACnC,OAAO;YAAE,iBAAiB;QAAG;QAC7B;IACJ;AACJ;AAEO,MAAM,oBAAoB,OAAO;IACpC,MAAM,sBAAsB,MAAM,6GAAA,CAAA,UAAM,CAAC,WAAW,CAAC,UAAU,CAAC;QAC5D,OAAO;YAAE,iBAAiB;QAAG;IACjC;IACA,IAAI,CAAC,qBAAqB,MAAM,IAAI,MAAM;IAE1C,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,WAAW,CAAC,MAAM,CAAC;QACnC,OAAO;YAAE,iBAAiB;QAAG;IACjC;AACJ"}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/controller/TratamientoController.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport * as TratamientoService from \"../service/TratamientoServices\";\r\n\r\nexport const getTratamientos = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    try {\r\n        const tratamientos = await TratamientoService.getAllTratamientos();\r\n        return res.status(200).json(tratamientos);\r\n    } catch (error) {\r\n        return res.status(500).json({ error: \"Error buscando tratamientos\" });\r\n    }\r\n};\r\n\r\nexport const getTratamiento = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id } = req.query;\r\n    try {\r\n        const tratamiento = await TratamientoService.getTratamiento(Number(id));\r\n        return res.status(200).json(tratamiento);\r\n    } catch (error) {\r\n        return res.status(404).json({ error: \"Tratamiento no encontrado\" });\r\n    }\r\n};\r\n\r\nexport const createTratamiento = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    try {\r\n        const { descripcion, fechainicio, fechafin, historial_id } = req.body;\r\n        const newTratamiento = await TratamientoService.createTratamiento({\r\n            descripcion,\r\n            fechainicio: new Date(fechainicio),\r\n            fechafin: new Date(fechafin),\r\n            historial_id,\r\n        });\r\n        return res.status(201).json(newTratamiento);\r\n    } catch (error: any) {\r\n        return res.status(500).json({ error: error.message || \"Error creando tratamiento\" });\r\n    }\r\n};\r\n\r\nexport const updateTratamiento = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id } = req.query;\r\n    try {\r\n        const { descripcion, fechainicio, fechafin, historial_id } = req.body;\r\n        const updatedTratamiento = await TratamientoService.updateTratamiento(Number(id), {\r\n            descripcion,\r\n            fechainicio: fechainicio ? new Date(fechainicio) : undefined,\r\n            fechafin: fechafin ? new Date(fechafin) : undefined,\r\n            historial_id,\r\n        });\r\n        return res.status(200).json(updatedTratamiento);\r\n    } catch (error: any) {\r\n        return res.status(500).json({ error: error.message || \"Error actualizando tratamiento\" });\r\n    }\r\n};\r\n\r\nexport const deleteTratamiento = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id } = req.query;\r\n    try {\r\n        const deletedTratamiento = await TratamientoService.deleteTratamiento(Number(id));\r\n        return res.status(200).json({ message: \"Tratamiento eliminado correctamente\", tratamiento: deletedTratamiento });\r\n    } catch (error) {\r\n        return res.status(500).json({ error: \"Error eliminando tratamiento\" });\r\n    }\r\n};"],"names":[],"mappings":";;;;;;;AACA;;AAEO,MAAM,kBAAkB,OAAO,KAAqB;IACvD,IAAI;QACA,MAAM,eAAe,MAAM,+HAAmB,kBAAkB;QAChE,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAO;QACZ,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA8B;IACvE;AACJ;AAEO,MAAM,iBAAiB,OAAO,KAAqB;IACtD,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;IACxB,IAAI;QACA,MAAM,cAAc,MAAM,+HAAmB,cAAc,CAAC,OAAO;QACnE,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAO;QACZ,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA4B;IACrE;AACJ;AAEO,MAAM,oBAAoB,OAAO,KAAqB;IACzD,IAAI;QACA,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI;QACrE,MAAM,iBAAiB,MAAM,+HAAmB,iBAAiB,CAAC;YAC9D;YACA,aAAa,IAAI,KAAK;YACtB,UAAU,IAAI,KAAK;YACnB;QACJ;QACA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAY;QACjB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO,IAAI;QAA4B;IACtF;AACJ;AAEO,MAAM,oBAAoB,OAAO,KAAqB;IACzD,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;IACxB,IAAI;QACA,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI;QACrE,MAAM,qBAAqB,MAAM,+HAAmB,iBAAiB,CAAC,OAAO,KAAK;YAC9E;YACA,aAAa,cAAc,IAAI,KAAK,eAAe;YACnD,UAAU,WAAW,IAAI,KAAK,YAAY;YAC1C;QACJ;QACA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAY;QACjB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO,IAAI;QAAiC;IAC3F;AACJ;AAEO,MAAM,oBAAoB,OAAO,KAAqB;IACzD,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;IACxB,IAAI;QACA,MAAM,qBAAqB,MAAM,+HAAmB,iBAAiB,CAAC,OAAO;QAC7E,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;YAAuC,aAAa;QAAmB;IAClH,EAAE,OAAO,OAAO;QACZ,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA+B;IACxE;AACJ"}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/lib/corsMiddleware.ts"],"sourcesContent":["import Cors from 'cors';\r\nimport { NextApiRequest, NextApiResponse } from 'next';\r\n\r\nconst cors = Cors({\r\n    methods: ['GET', 'HEAD', 'PUT', 'PATCH', 'POST', 'DELETE', 'OPTIONS'],\r\n    origin: ['http://localhost:5173', '*'], // Allow all origins\r\n    credentials: true,\r\n    optionsSuccessStatus: 200,\r\n    allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],\r\n});\r\n\r\nfunction runMiddleware(req: NextApiRequest, res: NextApiResponse, fn: Function) {\r\n    return new Promise((resolve, reject) => {\r\n        fn(req, res, (result: any) => {\r\n            if (result instanceof Error) {\r\n                return reject(result);\r\n            }\r\n            return resolve(result);\r\n        });\r\n    });\r\n}\r\n\r\nconst corsMiddleware = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    if (req.method === 'OPTIONS') {\r\n        try {\r\n            await runMiddleware(req, res, cors);\r\n            res.status(200).end();\r\n            return;\r\n        } catch (error) {\r\n            console.error('Error en OPTIONS:', error);\r\n            res.status(500).end();\r\n            return;\r\n        }\r\n    }\r\n    await runMiddleware(req, res, cors);\r\n};\r\n\r\nexport default corsMiddleware;"],"names":[],"mappings":";;;AAAA;;AAGA,MAAM,OAAO,CAAA,GAAA,iGAAA,CAAA,UAAI,AAAD,EAAE;IACd,SAAS;QAAC;QAAO;QAAQ;QAAO;QAAS;QAAQ;QAAU;KAAU;IACrE,QAAQ;QAAC;QAAyB;KAAI;IACtC,aAAa;IACb,sBAAsB;IACtB,gBAAgB;QAAC;QAAgB;QAAiB;KAAmB;AACzE;AAEA,SAAS,cAAc,GAAmB,EAAE,GAAoB,EAAE,EAAY;IAC1E,OAAO,IAAI,QAAQ,CAAC,SAAS;QACzB,GAAG,KAAK,KAAK,CAAC;YACV,IAAI,kBAAkB,OAAO;gBACzB,OAAO,OAAO;YAClB;YACA,OAAO,QAAQ;QACnB;IACJ;AACJ;AAEA,MAAM,iBAAiB,OAAO,KAAqB;IAC/C,IAAI,IAAI,MAAM,KAAK,WAAW;QAC1B,IAAI;YACA,MAAM,cAAc,KAAK,KAAK;YAC9B,IAAI,MAAM,CAAC,KAAK,GAAG;YACnB;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,qBAAqB;YACnC,IAAI,MAAM,CAAC,KAAK,GAAG;YACnB;QACJ;IACJ;IACA,MAAM,cAAc,KAAK,KAAK;AAClC;uCAEe"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/pages/api/ApiTratamiento.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport * as TratamientoController from \"@/controller/TratamientoController\";\r\nimport corsMiddleware from \"@/lib/corsMiddleware\";\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n    await corsMiddleware(req, res);\r\n    const { method } = req;\r\n    const { id } = req.query;\r\n\r\n    switch (method) {\r\n        case \"GET\":\r\n            if (id) return TratamientoController.getTratamiento(req, res);\r\n            return TratamientoController.getTratamientos(req, res);\r\n        case \"POST\":\r\n            return TratamientoController.createTratamiento(req, res);\r\n        case \"PUT\":\r\n            if (id) return TratamientoController.updateTratamiento(req, res);\r\n            return res.status(400).json({ error: \"ID requerido para actualizar un tratamiento\" });\r\n        case \"DELETE\":\r\n            if (id) return TratamientoController.deleteTratamiento(req, res);\r\n            return res.status(400).json({ error: \"ID requerido para eliminar un tratamiento\" });\r\n        default:\r\n            return res.status(405).json({ error: \"Método no permitido\" });\r\n    }\r\n}"],"names":[],"mappings":";;;AACA;AACA;;;AAEe,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC3E,MAAM,CAAA,GAAA,qHAAA,CAAA,UAAc,AAAD,EAAE,KAAK;IAC1B,MAAM,EAAE,MAAM,EAAE,GAAG;IACnB,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;IAExB,OAAQ;QACJ,KAAK;YACD,IAAI,IAAI,OAAO,oIAAsB,cAAc,CAAC,KAAK;YACzD,OAAO,oIAAsB,eAAe,CAAC,KAAK;QACtD,KAAK;YACD,OAAO,oIAAsB,iBAAiB,CAAC,KAAK;QACxD,KAAK;YACD,IAAI,IAAI,OAAO,oIAAsB,iBAAiB,CAAC,KAAK;YAC5D,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAA8C;QACvF,KAAK;YACD,IAAI,IAAI,OAAO,oIAAsB,iBAAiB,CAAC,KAAK;YAC5D,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAA4C;QACrF;YACI,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAAsB;IACnE;AACJ"}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,gIAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,gIAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}