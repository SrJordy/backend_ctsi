{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/lib/Prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;uCAEhB"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/service/UserService.ts"],"sourcesContent":["import prisma from \"@/lib/Prisma\";\r\nimport { usuario } from \"@prisma/client\";\r\n\r\nexport const getAllUsers = async (): Promise<usuario[]> => {\r\n    return await prisma.usuario.findMany({\r\n        where:{\r\n            estado:true\r\n        }\r\n    })\r\n}\r\n\r\nexport const getUser = async (criteria: { id?: number; nombre?: string; apellido?: string; CID?: number }): Promise<usuario | null> => {\r\n    const { id, nombre, apellido, CID } = criteria;\r\n\r\n    return await prisma.usuario.findFirst({\r\n        where: {\r\n            OR: [\r\n                { cod_usuario: id },\r\n                { nombre: nombre },\r\n                { apellido: apellido },\r\n                { CID: CID },\r\n            ],\r\n            estado:true\r\n        },\r\n    });\r\n};\r\n\r\n\r\nexport const createUser = async (data: Omit<usuario, 'cod_usuario' | 'creadoEn' | 'actualizadoEn'>): Promise<usuario> => {\r\n    return await prisma.usuario.create({\r\n        data,\r\n    });\r\n};\r\n\r\n\r\nexport const updateUser = async (id: number, data: Partial<Omit<usuario, 'cod_usuario' | 'creadoEn' | 'actualizadoEn'>>): Promise<usuario> => {\r\n    return await prisma.usuario.update({\r\n        where: { cod_usuario: id },\r\n        data,\r\n    });\r\n};\r\n\r\n\r\nexport const deleteUser = async (idusuario: number): Promise<usuario> => {\r\n    return await prisma.usuario.delete({\r\n        where: { cod_usuario: idusuario },\r\n    });\r\n};"],"names":[],"mappings":";;;;;;;AAAA;;AAGO,MAAM,cAAc;IACvB,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;QACjC,OAAM;YACF,QAAO;QACX;IACJ;AACJ;AAEO,MAAM,UAAU,OAAO;IAC1B,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG;IAEtC,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,SAAS,CAAC;QAClC,OAAO;YACH,IAAI;gBACA;oBAAE,aAAa;gBAAG;gBAClB;oBAAE,QAAQ;gBAAO;gBACjB;oBAAE,UAAU;gBAAS;gBACrB;oBAAE,KAAK;gBAAI;aACd;YACD,QAAO;QACX;IACJ;AACJ;AAGO,MAAM,aAAa,OAAO;IAC7B,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,MAAM,CAAC;QAC/B;IACJ;AACJ;AAGO,MAAM,aAAa,OAAO,IAAY;IACzC,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,MAAM,CAAC;QAC/B,OAAO;YAAE,aAAa;QAAG;QACzB;IACJ;AACJ;AAGO,MAAM,aAAa,OAAO;IAC7B,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,MAAM,CAAC;QAC/B,OAAO;YAAE,aAAa;QAAU;IACpC;AACJ"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/controller/UserController.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport * as UserServices from '../service/UserService'\r\nimport bcrypt from 'bcryptjs'\r\n\r\nexport const getUsers = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    try {\r\n        const users = await UserServices.getAllUsers();\r\n        return res.status(200).json(users);\r\n    } catch (error) {\r\n        console.error(error);\r\n        return res.status(500).json({ error: 'Error buscando usuarios' });\r\n    }\r\n};\r\n\r\nexport const getUser = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id, nombre, apellido, CID } = req.query;\r\n    try {\r\n        const user = await UserServices.getUser({\r\n            id: id ? Number(id) : undefined,\r\n            nombre: nombre ? String(nombre) : undefined,\r\n            apellido: apellido ? String(apellido) : undefined,\r\n            CID: CID ? Number(CID) : undefined,\r\n        });\r\n        if (!user) {\r\n            return res.status(404).json({ error: 'Usuario no encontrado' });\r\n        }\r\n        return res.status(200).json(user);\r\n    } catch (error) {\r\n        console.error(error);\r\n        return res.status(500).json({ error: 'Error buscando usuario' });\r\n    }\r\n};\r\n\r\nexport const createUser = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    try {\r\n        const { nombre, apellido, CID, telefono, email, rol, password } = req.body;\r\n        const hashedPassword = await bcrypt.hash(password, 10);\r\n        const newUser = await UserServices.createUser({\r\n            nombre,\r\n            apellido,\r\n            CID,\r\n            telefono,\r\n            email,\r\n            rol,\r\n            password: hashedPassword,\r\n        });\r\n        return res.status(201).json(newUser);\r\n    } catch (error) {\r\n        console.error(error);\r\n        return res.status(500).json({ error: 'Error Creando usuario' });\r\n    }\r\n};\r\n\r\nexport const updateUser = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id } = req.query;\r\n    try {\r\n        const { nombre, apellido, CID, telefono, email, rol, password } = req.body;\r\n        const updatedData = {\r\n            nombre,\r\n            apellido,\r\n            CID,\r\n            telefono,\r\n            email,\r\n            rol,\r\n            password: password ? await bcrypt.hash(password, 10) : undefined,\r\n        };\r\n        const updatedUser = await UserServices.updateUser(Number(id), updatedData);\r\n        if (!updatedUser) {\r\n            return res.status(404).json({ error: 'Usuario no encontrado' });\r\n        }\r\n        return res.status(200).json(updatedUser);\r\n    } catch (error) {\r\n        console.error(error);\r\n        return res.status(500).json({ error: 'Error actualizando usuario' });\r\n    }\r\n};\r\n\r\nexport const deleteUser = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id } = req.query;\r\n    try {\r\n        const deletedUser = await UserServices.deleteUser(Number(id));\r\n        if (!deletedUser) {\r\n            return res.status(404).json({ error: 'Usuario no encontrado' });\r\n        }\r\n        return res.status(200).json({ message: 'Usuario eliminado correctamente' });\r\n    } catch (error) {\r\n        console.error(error);\r\n        return res.status(500).json({ error: 'Error al eliminar un usuario' });\r\n    }\r\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/lib/corsMiddleware.ts"],"sourcesContent":["import Cors from 'cors';\r\nimport { NextApiRequest, NextApiResponse } from 'next';\r\n\r\nconst cors = Cors({\r\n  methods: ['GET', 'POST', 'PUT', 'DELETE'], \r\n  origin: '*',\r\n});\r\n\r\nfunction runMiddleware(req: NextApiRequest, res: NextApiResponse, fn: Function) {\r\n  return new Promise((resolve, reject) => {\r\n    fn(req, res, (result: any) => {\r\n      if (result instanceof Error) {\r\n        return reject(result);\r\n      }\r\n      return resolve(result);\r\n    });\r\n  });\r\n}\r\n\r\nexport default async function corsMiddleware(req: NextApiRequest, res: NextApiResponse) {\r\n  await runMiddleware(req, res, cors);\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;AAGA,MAAM,OAAO,KAAK;IAChB,SAAS;QAAC;QAAO;QAAQ;QAAO;KAAS;IACzC,QAAQ;AACV;AAEA,SAAS,cAAc,GAAmB,EAAE,GAAoB,EAAE,EAAY;IAC5E,OAAO,IAAI,QAAQ,CAAC,SAAS;QAC3B,GAAG,KAAK,KAAK,CAAC;YACZ,IAAI,kBAAkB,OAAO;gBAC3B,OAAO,OAAO;YAChB;YACA,OAAO,QAAQ;QACjB;IACF;AACF;AAEe,eAAe,eAAe,GAAmB,EAAE,GAAoB;IACpF,MAAM,cAAc,KAAK,KAAK;AAChC"}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/pages/api/ApiUser.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport * as UserController from \"@/controller/UserController\";\r\nimport corsMiddleware from \"@/lib/corsMiddleware\";\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n    await corsMiddleware(req, res);\r\n    const { method } = req;\r\n    const { id, nombre, apellido, CID, telefono, email } = req.query;\r\n\r\n    switch (method) {\r\n        case \"GET\":\r\n            if (id || nombre || apellido || CID || telefono || email) {\r\n                return UserController.getUser(req, res);\r\n            } else {\r\n                return UserController.getUsers(req, res);\r\n            }\r\n\r\n        case \"POST\":\r\n            return UserController.createUser(req, res);\r\n\r\n        case \"PUT\":\r\n            if (id) {\r\n                return UserController.updateUser(req, res);\r\n            } else {\r\n                return res.status(400).json({ message: \"El ID es requerido para realizar la actualización\" });\r\n            }\r\n\r\n        case \"DELETE\":\r\n            if (id) {\r\n                return UserController.deleteUser(req, res);\r\n            } else {\r\n                return res.status(400).json({ message: \"El ID es requerido para eliminar un usuario\" });\r\n            }\r\n\r\n        default:\r\n            return res.status(405).json({ message: \"Método no permitido\" });\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;;;AAEe,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC3E,MAAM,CAAA,GAAA,qHAAA,CAAA,UAAc,AAAD,EAAE,KAAK;IAC1B,MAAM,EAAE,MAAM,EAAE,GAAG;IACnB,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,IAAI,KAAK;IAEhE,OAAQ;QACJ,KAAK;YACD,IAAI,MAAM,UAAU,YAAY,OAAO,YAAY,OAAO;gBACtD,OAAO,6HAAe,OAAO,CAAC,KAAK;YACvC,OAAO;gBACH,OAAO,6HAAe,QAAQ,CAAC,KAAK;YACxC;QAEJ,KAAK;YACD,OAAO,6HAAe,UAAU,CAAC,KAAK;QAE1C,KAAK;YACD,IAAI,IAAI;gBACJ,OAAO,6HAAe,UAAU,CAAC,KAAK;YAC1C,OAAO;gBACH,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,SAAS;gBAAoD;YAC/F;QAEJ,KAAK;YACD,IAAI,IAAI;gBACJ,OAAO,6HAAe,UAAU,CAAC,KAAK;YAC1C,OAAO;gBACH,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,SAAS;gBAA8C;YACzF;QAEJ;YACI,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAAsB;IACrE;AACJ"}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,yHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,yHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}