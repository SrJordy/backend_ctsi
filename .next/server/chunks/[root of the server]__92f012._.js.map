{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/lib/Prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;uCAEhB"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/service/RecetaService.ts"],"sourcesContent":["import prisma from \"@/lib/Prisma\";\r\nimport { receta } from \"@prisma/client\";\r\n\r\nexport const getAllRecetas = async (): Promise<receta[]> => {\r\n    try {\r\n        return await prisma.receta.findMany({\r\n            include: {\r\n                persona: true,\r\n                profesional: true,\r\n                medicamento: true,\r\n            },\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error al obtener todas las recetas:\", error);\r\n        throw new Error(\"No se pudieron obtener las recetas\");\r\n    }\r\n};\r\n\r\nexport const getReceta = async (id: number): Promise<receta | null> => {\r\n    try {\r\n        return await prisma.receta.findUnique({\r\n            where: { cod_receta: id },\r\n            include: {\r\n                persona: true,\r\n                profesional: true,\r\n                medicamento: true,\r\n            },\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error al obtener la receta:\", error);\r\n        throw new Error(\"No se pudo obtener la receta\");\r\n    }\r\n};\r\n\r\nexport const createReceta = async (data: Omit<receta, \"cod_receta\" | \"fecha\">): Promise<receta> => {\r\n    try {\r\n        return await prisma.receta.create({\r\n            data,\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error al crear una receta:\", error);\r\n        throw new Error(\"No se pudo crear la receta\");\r\n    }\r\n};\r\n\r\nexport const updateReceta = async (id: number,data: Partial<Omit<receta, \"cod_receta\" | \"fecha\">>): Promise<receta> => {\r\n    try {\r\n        const existingReceta = await prisma.receta.findUnique({\r\n            where: { cod_receta: id },\r\n        });\r\n        if (!existingReceta) {\r\n            throw new Error(\"Receta no encontrada\");\r\n        }\r\n        return await prisma.receta.update({\r\n            where: { cod_receta: id },\r\n            data,\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error al actualizar la receta:\", error);\r\n        throw new Error(\"No se pudo actualizar la receta\");\r\n    }\r\n};\r\n\r\nexport const deleteReceta = async (id: number): Promise<receta> => {\r\n    try {\r\n        const existingReceta = await prisma.receta.findUnique({\r\n            where: { cod_receta: id },\r\n        });\r\n        if (!existingReceta) {\r\n            throw new Error(\"Receta no encontrada\");\r\n        }\r\n        return await prisma.receta.delete({\r\n            where: { cod_receta: id },\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error al eliminar la receta:\", error);\r\n        throw new Error(\"No se pudo eliminar la receta\");\r\n    }\r\n};\r\n"],"names":[],"mappings":";;;;;;;AAAA;;AAGO,MAAM,gBAAgB;IACzB,IAAI;QACA,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;YAChC,SAAS;gBACL,SAAS;gBACT,aAAa;gBACb,aAAa;YACjB;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,uCAAuC;QACrD,MAAM,IAAI,MAAM;IACpB;AACJ;AAEO,MAAM,YAAY,OAAO;IAC5B,IAAI;QACA,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,MAAM,CAAC,UAAU,CAAC;YAClC,OAAO;gBAAE,YAAY;YAAG;YACxB,SAAS;gBACL,SAAS;gBACT,aAAa;gBACb,aAAa;YACjB;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM,IAAI,MAAM;IACpB;AACJ;AAEO,MAAM,eAAe,OAAO;IAC/B,IAAI;QACA,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,MAAM,CAAC,MAAM,CAAC;YAC9B;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,MAAM,IAAI,MAAM;IACpB;AACJ;AAEO,MAAM,eAAe,OAAO,IAAW;IAC1C,IAAI;QACA,MAAM,iBAAiB,MAAM,6GAAA,CAAA,UAAM,CAAC,MAAM,CAAC,UAAU,CAAC;YAClD,OAAO;gBAAE,YAAY;YAAG;QAC5B;QACA,IAAI,CAAC,gBAAgB;YACjB,MAAM,IAAI,MAAM;QACpB;QACA,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,MAAM,CAAC,MAAM,CAAC;YAC9B,OAAO;gBAAE,YAAY;YAAG;YACxB;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,kCAAkC;QAChD,MAAM,IAAI,MAAM;IACpB;AACJ;AAEO,MAAM,eAAe,OAAO;IAC/B,IAAI;QACA,MAAM,iBAAiB,MAAM,6GAAA,CAAA,UAAM,CAAC,MAAM,CAAC,UAAU,CAAC;YAClD,OAAO;gBAAE,YAAY;YAAG;QAC5B;QACA,IAAI,CAAC,gBAAgB;YACjB,MAAM,IAAI,MAAM;QACpB;QACA,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,MAAM,CAAC,MAAM,CAAC;YAC9B,OAAO;gBAAE,YAAY;YAAG;QAC5B;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM,IAAI,MAAM;IACpB;AACJ"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/controller/RecetaController.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport * as RecetaServices from \"../service/RecetaService\";\r\n\r\nexport const getRecetas = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    try {\r\n        const recetas = await RecetaServices.getAllRecetas();\r\n        return res.status(200).json(recetas);\r\n    } catch (error) {\r\n        console.error(\"Error en getRecetas:\", error);\r\n        return res.status(500).json({ error: \"Error buscando recetas\" });\r\n    }\r\n};\r\n\r\nexport const getReceta = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id } = req.query;\r\n    try {\r\n        const receta = await RecetaServices.getReceta(Number(id));\r\n        if (!receta) {\r\n            return res.status(404).json({ error: \"Receta no encontrada\" });\r\n        }\r\n        return res.status(200).json(receta);\r\n    } catch (error) {\r\n        console.error(\"Error en getReceta:\", error);\r\n        return res.status(500).json({ error: \"Error buscando receta\" });\r\n    }\r\n};\r\n\r\nexport const createReceta = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    try {\r\n        const { persona_id, profesional_id } = req.body;\r\n        if (!persona_id || !profesional_id ) {\r\n            return res.status(400).json({ error: \"Faltan datos requeridos\" });\r\n        }\r\n        const newReceta = await RecetaServices.createReceta({\r\n            persona_id,\r\n            profesional_id,\r\n        });\r\n        return res.status(201).json(newReceta);\r\n    } catch (error) {\r\n        console.error(\"Error en createReceta:\", error);\r\n        return res.status(500).json({ error: \"Error creando receta\" });\r\n    }\r\n};\r\n\r\nexport const updateReceta = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id } = req.query;\r\n    try {\r\n        const { persona_id, profesional_id} = req.body;\r\n        if (!id) {\r\n            return res.status(400).json({ error: \"El ID es requerido para actualizar una receta\" });\r\n        }\r\n        const updatedReceta = await RecetaServices.updateReceta(Number(id), {\r\n            persona_id,\r\n            profesional_id,\r\n        });\r\n        return res.status(200).json(updatedReceta);\r\n    } catch (error) {\r\n        console.error(\"Error en updateReceta:\", error);\r\n        return res.status(500).json({ error: \"Error actualizando receta\" });\r\n    }\r\n};\r\n\r\nexport const deleteReceta = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id } = req.query;\r\n    try {\r\n        if (!id) {\r\n            return res.status(400).json({ error: \"El ID es requerido para eliminar una receta\" });\r\n        }\r\n        const deletedReceta = await RecetaServices.deleteReceta(Number(id));\r\n        return res.status(200).json({ message: \"Receta eliminada correctamente\", receta: deletedReceta });\r\n    } catch (error) {\r\n        console.error(\"Error en deleteReceta:\", error);\r\n        return res.status(500).json({ error: \"Error eliminando receta\" });\r\n    }\r\n};\r\n"],"names":[],"mappings":";;;;;;;AACA;;AAEO,MAAM,aAAa,OAAO,KAAqB;IAClD,IAAI;QACA,MAAM,UAAU,MAAM,yHAAe,aAAa;QAClD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAyB;IAClE;AACJ;AAEO,MAAM,YAAY,OAAO,KAAqB;IACjD,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;IACxB,IAAI;QACA,MAAM,SAAS,MAAM,yHAAe,SAAS,CAAC,OAAO;QACrD,IAAI,CAAC,QAAQ;YACT,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAAuB;QAChE;QACA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAwB;IACjE;AACJ;AAEO,MAAM,eAAe,OAAO,KAAqB;IACpD,IAAI;QACA,MAAM,EAAE,UAAU,EAAE,cAAc,EAAE,GAAG,IAAI,IAAI;QAC/C,IAAI,CAAC,cAAc,CAAC,gBAAiB;YACjC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAA0B;QACnE;QACA,MAAM,YAAY,MAAM,yHAAe,YAAY,CAAC;YAChD;YACA;QACJ;QACA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAuB;IAChE;AACJ;AAEO,MAAM,eAAe,OAAO,KAAqB;IACpD,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;IACxB,IAAI;QACA,MAAM,EAAE,UAAU,EAAE,cAAc,EAAC,GAAG,IAAI,IAAI;QAC9C,IAAI,CAAC,IAAI;YACL,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAAgD;QACzF;QACA,MAAM,gBAAgB,MAAM,yHAAe,YAAY,CAAC,OAAO,KAAK;YAChE;YACA;QACJ;QACA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA4B;IACrE;AACJ;AAEO,MAAM,eAAe,OAAO,KAAqB;IACpD,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;IACxB,IAAI;QACA,IAAI,CAAC,IAAI;YACL,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAA8C;QACvF;QACA,MAAM,gBAAgB,MAAM,yHAAe,YAAY,CAAC,OAAO;QAC/D,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,SAAS;YAAkC,QAAQ;QAAc;IACnG,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA0B;IACnE;AACJ"}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/lib/corsMiddleware.ts"],"sourcesContent":["import Cors from 'cors';\r\nimport { NextApiRequest, NextApiResponse } from 'next';\r\n\r\nconst cors = Cors({\r\n    methods: ['GET', 'HEAD', 'PUT', 'PATCH', 'POST', 'DELETE', 'OPTIONS'],\r\n    origin: 'http://localhost:5173', // Específicamente tu origen de Vite\r\n    credentials: true,\r\n    optionsSuccessStatus: 200,\r\n    allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],\r\n});\r\n\r\nfunction runMiddleware(req: NextApiRequest, res: NextApiResponse, fn: Function) {\r\n    return new Promise((resolve, reject) => {\r\n        fn(req, res, (result: any) => {\r\n            if (result instanceof Error) {\r\n                return reject(result);\r\n            }\r\n            return resolve(result);\r\n        });\r\n    });\r\n}\r\n\r\nconst corsMiddleware = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    if (req.method === 'OPTIONS') {\r\n        try {\r\n            await runMiddleware(req, res, cors);\r\n            res.status(200).end();\r\n            return;\r\n        } catch (error) {\r\n            console.error('Error en OPTIONS:', error);\r\n            res.status(500).end();\r\n            return;\r\n        }\r\n    }\r\n    await runMiddleware(req, res, cors);\r\n};\r\n\r\nexport default corsMiddleware;"],"names":[],"mappings":";;;AAAA;;AAGA,MAAM,OAAO,CAAA,GAAA,iGAAA,CAAA,UAAI,AAAD,EAAE;IACd,SAAS;QAAC;QAAO;QAAQ;QAAO;QAAS;QAAQ;QAAU;KAAU;IACrE,QAAQ;IACR,aAAa;IACb,sBAAsB;IACtB,gBAAgB;QAAC;QAAgB;QAAiB;KAAmB;AACzE;AAEA,SAAS,cAAc,GAAmB,EAAE,GAAoB,EAAE,EAAY;IAC1E,OAAO,IAAI,QAAQ,CAAC,SAAS;QACzB,GAAG,KAAK,KAAK,CAAC;YACV,IAAI,kBAAkB,OAAO;gBACzB,OAAO,OAAO;YAClB;YACA,OAAO,QAAQ;QACnB;IACJ;AACJ;AAEA,MAAM,iBAAiB,OAAO,KAAqB;IAC/C,IAAI,IAAI,MAAM,KAAK,WAAW;QAC1B,IAAI;YACA,MAAM,cAAc,KAAK,KAAK;YAC9B,IAAI,MAAM,CAAC,KAAK,GAAG;YACnB;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,qBAAqB;YACnC,IAAI,MAAM,CAAC,KAAK,GAAG;YACnB;QACJ;IACJ;IACA,MAAM,cAAc,KAAK,KAAK;AAClC;uCAEe"}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/pages/api/ApiReceta.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport * as RecetaController from \"@/controller/RecetaController\";\r\nimport corsMiddleware from \"@/lib/corsMiddleware\";\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n    try {\r\n        await corsMiddleware(req, res);\r\n        const { method } = req;\r\n        const { id } = req.query;\r\n        switch (method) {\r\n            case \"GET\":\r\n                if (id) {\r\n                    return await RecetaController.getReceta(req, res);\r\n                } else {\r\n                    return await RecetaController.getRecetas(req, res);\r\n                }\r\n            case \"POST\":\r\n                return await RecetaController.createReceta(req, res);\r\n            case \"PUT\":\r\n                if (id) {\r\n                    return await RecetaController.updateReceta(req, res);\r\n                } else {\r\n                    return res.status(400).json({ message: \"El ID es requerido para realizar la actualización\" });\r\n                }\r\n            case \"DELETE\":\r\n                if (id) {\r\n                    return await RecetaController.deleteReceta(req, res);\r\n                } else {\r\n                    return res.status(400).json({ message: \"El ID es requerido para eliminar una receta\" });\r\n                }\r\n            default:\r\n                return res.status(405).json({ message: \"Método no permitido\" });\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error en la API handler:\", error);\r\n        return res.status(500).json({ error: \"Error interno del servidor\" });\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;AACA;AACA;;;AAEe,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC3E,IAAI;QACA,MAAM,CAAA,GAAA,qHAAA,CAAA,UAAc,AAAD,EAAE,KAAK;QAC1B,MAAM,EAAE,MAAM,EAAE,GAAG;QACnB,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;QACxB,OAAQ;YACJ,KAAK;gBACD,IAAI,IAAI;oBACJ,OAAO,MAAM,+HAAiB,SAAS,CAAC,KAAK;gBACjD,OAAO;oBACH,OAAO,MAAM,+HAAiB,UAAU,CAAC,KAAK;gBAClD;YACJ,KAAK;gBACD,OAAO,MAAM,+HAAiB,YAAY,CAAC,KAAK;YACpD,KAAK;gBACD,IAAI,IAAI;oBACJ,OAAO,MAAM,+HAAiB,YAAY,CAAC,KAAK;gBACpD,OAAO;oBACH,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;wBAAE,SAAS;oBAAoD;gBAC/F;YACJ,KAAK;gBACD,IAAI,IAAI;oBACJ,OAAO,MAAM,+HAAiB,YAAY,CAAC,KAAK;gBACpD,OAAO;oBACH,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;wBAAE,SAAS;oBAA8C;gBACzF;YACJ;gBACI,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,SAAS;gBAAsB;QACrE;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA6B;IACtE;AACJ"}},
    {"offset": {"line": 349, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 398, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,2HAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,2HAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 458, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}