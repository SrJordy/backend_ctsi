{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/lib/RecordatorioServiceError.ts"],"sourcesContent":["export class RecordatorioServiceError extends Error {\r\n    code: string;\r\n\r\n    constructor(code: string, message: string) {\r\n        super(message);\r\n        this.code = code;\r\n        this.name = 'RecordatorioServiceError';\r\n    }\r\n}"],"names":[],"mappings":";;;AAAO,MAAM,iCAAiC;IAC1C,KAAa;IAEb,YAAY,IAAY,EAAE,OAAe,CAAE;QACvC,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;IAChB;AACJ"}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/service/RecordatorioService.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\nimport { RecordatorioServiceError } from '@/lib/RecordatorioServiceError';\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nexport interface CreateRecordatorioInput {\r\n    medicamento_id: number;\r\n    fechahora: Date;\r\n    persona_id: number;\r\n}\r\n\r\nexport interface UpdateRecordatorioInput {\r\n    medicamento_id?: number;\r\n    fechahora?: Date;\r\n    persona_id?: number;\r\n    estado?: boolean;\r\n}\r\n\r\nexport class RecordatorioService {\r\n    async createRecordatorio(data: CreateRecordatorioInput) {\r\n        try {\r\n            // Validar que el medicamento existe\r\n            const medicamento = await prisma.medicamento.findUnique({\r\n                where: { cod_medicamento: data.medicamento_id }\r\n            });\r\n            if (!medicamento) {\r\n                throw new RecordatorioServiceError('MEDICAMENTO_NOT_FOUND', 'El medicamento no existe');\r\n            }\r\n\r\n            // Validar que el paciente existe\r\n            const paciente = await prisma.paciente.findUnique({\r\n                where: { cod_paciente: data.persona_id }\r\n            });\r\n            if (!paciente) {\r\n                throw new RecordatorioServiceError('PACIENTE_NOT_FOUND', 'El paciente no existe');\r\n            }\r\n\r\n            const recordatorio = await prisma.recordatorioMedicamento.create({\r\n                data: {\r\n                    medicamento_id: data.medicamento_id,\r\n                    fechahora: new Date(data.fechahora),\r\n                    persona_id: data.persona_id,\r\n                    estado: true\r\n                },\r\n                include: {\r\n                    medicina: true,\r\n                    persona: true\r\n                }\r\n            });\r\n\r\n            return recordatorio;\r\n        } catch (error) {\r\n            console.error('Error en createRecordatorio:', error);\r\n            if (error instanceof RecordatorioServiceError) {\r\n                throw error;\r\n            }\r\n            throw new RecordatorioServiceError('CREATE_ERROR', 'Error al crear el recordatorio');\r\n        }\r\n    }\r\n\r\n    async getRecordatorios() {\r\n        try {\r\n            return await prisma.recordatorioMedicamento.findMany({\r\n                include: {\r\n                    medicina: true,\r\n                    persona: true\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error('Error en getRecordatorios:', error);\r\n            throw new RecordatorioServiceError('FETCH_ERROR', 'Error al obtener los recordatorios');\r\n        }\r\n    }\r\n\r\n    async getRecordatorio(id: number) {\r\n        try {\r\n            const recordatorio = await prisma.recordatorioMedicamento.findUnique({\r\n                where: { cod_recordatorio: id },\r\n                include: {\r\n                    medicina: true,\r\n                    persona: true\r\n                }\r\n            });\r\n\r\n            if (!recordatorio) {\r\n                throw new RecordatorioServiceError('NOT_FOUND', 'Recordatorio no encontrado');\r\n            }\r\n\r\n            return recordatorio;\r\n        } catch (error) {\r\n            console.error('Error en getRecordatorio:', error);\r\n            if (error instanceof RecordatorioServiceError) {\r\n                throw error;\r\n            }\r\n            throw new RecordatorioServiceError('FETCH_ERROR', 'Error al obtener el recordatorio');\r\n        }\r\n    }\r\n\r\n    async updateRecordatorio(id: number, data: UpdateRecordatorioInput) {\r\n        try {\r\n            // Verificar si el recordatorio existe\r\n            const existingRecordatorio = await prisma.recordatorioMedicamento.findUnique({\r\n                where: { cod_recordatorio: id }\r\n            });\r\n\r\n            if (!existingRecordatorio) {\r\n                throw new RecordatorioServiceError('NOT_FOUND', 'Recordatorio no encontrado');\r\n            }\r\n\r\n            // Si se actualiza el medicamento, verificar que existe\r\n            if (data.medicamento_id) {\r\n                const medicamento = await prisma.medicamento.findUnique({\r\n                    where: { cod_medicamento: data.medicamento_id }\r\n                });\r\n                if (!medicamento) {\r\n                    throw new RecordatorioServiceError('MEDICAMENTO_NOT_FOUND', 'El medicamento no existe');\r\n                }\r\n            }\r\n\r\n            // Si se actualiza el paciente, verificar que existe\r\n            if (data.persona_id) {\r\n                const paciente = await prisma.paciente.findUnique({\r\n                    where: { cod_paciente: data.persona_id }\r\n                });\r\n                if (!paciente) {\r\n                    throw new RecordatorioServiceError('PACIENTE_NOT_FOUND', 'El paciente no existe');\r\n                }\r\n            }\r\n\r\n            return await prisma.recordatorioMedicamento.update({\r\n                where: { cod_recordatorio: id },\r\n                data: {\r\n                    ...data,\r\n                    fechahora: data.fechahora ? new Date(data.fechahora) : undefined\r\n                },\r\n                include: {\r\n                    medicina: true,\r\n                    persona: true\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.error('Error en updateRecordatorio:', error);\r\n            if (error instanceof RecordatorioServiceError) {\r\n                throw error;\r\n            }\r\n            throw new RecordatorioServiceError('UPDATE_ERROR', 'Error al actualizar el recordatorio');\r\n        }\r\n    }\r\n\r\n    async deleteRecordatorio(id: number) {\r\n        try {\r\n            // Verificar si el recordatorio existe\r\n            const recordatorio = await prisma.recordatorioMedicamento.findUnique({\r\n                where: { cod_recordatorio: id }\r\n            });\r\n\r\n            if (!recordatorio) {\r\n                throw new RecordatorioServiceError('NOT_FOUND', 'Recordatorio no encontrado');\r\n            }\r\n\r\n            // Realizar un soft delete actualizando el estado\r\n            return await prisma.recordatorioMedicamento.update({\r\n                where: { cod_recordatorio: id },\r\n                data: { estado: false }\r\n            });\r\n        } catch (error) {\r\n            console.error('Error en deleteRecordatorio:', error);\r\n            if (error instanceof RecordatorioServiceError) {\r\n                throw error;\r\n            }\r\n            throw new RecordatorioServiceError('DELETE_ERROR', 'Error al eliminar el recordatorio');\r\n        }\r\n    }\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/controller/RecordatorioController.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next';\r\nimport { RecordatorioService } from '@/service/RecordatorioService';\r\nimport { RecordatorioServiceError } from '@/lib/RecordatorioServiceError';\r\n\r\nconst recordatorioService = new RecordatorioService();\r\n\r\nexport async function createRecordatorio(req: NextApiRequest, res: NextApiResponse) {\r\n    try {\r\n        console.log('Datos recibidos en createRecordatorio:', req.body);\r\n        const recordatorio = await recordatorioService.createRecordatorio(req.body);\r\n        console.log('Recordatorio creado:', recordatorio);\r\n        return res.status(201).json(recordatorio);\r\n    } catch (error) {\r\n        console.error('Error en createRecordatorio controller:', error);\r\n        if (error instanceof RecordatorioServiceError) {\r\n            return res.status(400).json({ \r\n                error: error.message,\r\n                code: error.code \r\n            });\r\n        }\r\n        return res.status(500).json({ \r\n            error: 'Error interno del servidor',\r\n            code: 'INTERNAL_ERROR'\r\n        });\r\n    }\r\n}\r\n\r\nexport async function getRecordatorios(req: NextApiRequest, res: NextApiResponse) {\r\n    try {\r\n        const recordatorios = await recordatorioService.getRecordatorios();\r\n        return res.status(200).json(recordatorios);\r\n    } catch (error) {\r\n        console.error('Error en getRecordatorios controller:', error);\r\n        if (error instanceof RecordatorioServiceError) {\r\n            return res.status(400).json({ \r\n                error: error.message,\r\n                code: error.code \r\n            });\r\n        }\r\n        return res.status(500).json({ \r\n            error: 'Error interno del servidor',\r\n            code: 'INTERNAL_ERROR'\r\n        });\r\n    }\r\n}\r\n\r\nexport async function getRecordatorio(req: NextApiRequest, res: NextApiResponse) {\r\n    try {\r\n        const id = Number(req.query.id);\r\n        if (isNaN(id)) {\r\n            return res.status(400).json({ \r\n                error: 'ID inválido',\r\n                code: 'INVALID_ID'\r\n            });\r\n        }\r\n\r\n        const recordatorio = await recordatorioService.getRecordatorio(id);\r\n        return res.status(200).json(recordatorio);\r\n    } catch (error) {\r\n        console.error('Error en getRecordatorio controller:', error);\r\n        if (error instanceof RecordatorioServiceError) {\r\n            return res.status(400).json({ \r\n                error: error.message,\r\n                code: error.code \r\n            });\r\n        }\r\n        return res.status(500).json({ \r\n            error: 'Error interno del servidor',\r\n            code: 'INTERNAL_ERROR'\r\n        });\r\n    }\r\n}\r\n\r\nexport async function updateRecordatorio(req: NextApiRequest, res: NextApiResponse) {\r\n    try {\r\n        const id = Number(req.query.id);\r\n        if (isNaN(id)) {\r\n            return res.status(400).json({ \r\n                error: 'ID inválido',\r\n                code: 'INVALID_ID'\r\n            });\r\n        }\r\n\r\n        console.log('Datos recibidos en updateRecordatorio:', { id, data: req.body });\r\n        const recordatorio = await recordatorioService.updateRecordatorio(id, req.body);\r\n        console.log('Recordatorio actualizado:', recordatorio);\r\n        return res.status(200).json(recordatorio);\r\n    } catch (error) {\r\n        console.error('Error en updateRecordatorio controller:', error);\r\n        if (error instanceof RecordatorioServiceError) {\r\n            return res.status(400).json({ \r\n                error: error.message,\r\n                code: error.code \r\n            });\r\n        }\r\n        return res.status(500).json({ \r\n            error: 'Error interno del servidor',\r\n            code: 'INTERNAL_ERROR'\r\n        });\r\n    }\r\n}\r\n\r\nexport async function deleteRecordatorio(req: NextApiRequest, res: NextApiResponse) {\r\n    try {\r\n        const id = Number(req.query.id);\r\n        if (isNaN(id)) {\r\n            return res.status(400).json({ \r\n                error: 'ID inválido',\r\n                code: 'INVALID_ID'\r\n            });\r\n        }\r\n\r\n        await recordatorioService.deleteRecordatorio(id);\r\n        return res.status(200).json({ \r\n            message: 'Recordatorio eliminado correctamente'\r\n        });\r\n    } catch (error) {\r\n        console.error('Error en deleteRecordatorio controller:', error);\r\n        if (error instanceof RecordatorioServiceError) {\r\n            return res.status(400).json({ \r\n                error: error.message,\r\n                code: error.code \r\n            });\r\n        }\r\n        return res.status(500).json({ \r\n            error: 'Error interno del servidor',\r\n            code: 'INTERNAL_ERROR'\r\n        });\r\n    }\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 347, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/lib/corsMiddleware.ts"],"sourcesContent":["import Cors from 'cors';\r\nimport { NextApiRequest, NextApiResponse } from 'next';\r\n\r\nconst cors = Cors({\r\n    methods: ['GET', 'HEAD', 'PUT', 'PATCH', 'POST', 'DELETE', 'OPTIONS'],\r\n    origin: 'http://localhost:5173', // Específicamente tu origen de Vite\r\n    credentials: true,\r\n    optionsSuccessStatus: 200,\r\n    allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],\r\n});\r\n\r\nfunction runMiddleware(req: NextApiRequest, res: NextApiResponse, fn: Function) {\r\n    return new Promise((resolve, reject) => {\r\n        fn(req, res, (result: any) => {\r\n            if (result instanceof Error) {\r\n                return reject(result);\r\n            }\r\n            return resolve(result);\r\n        });\r\n    });\r\n}\r\n\r\nconst corsMiddleware = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    if (req.method === 'OPTIONS') {\r\n        try {\r\n            await runMiddleware(req, res, cors);\r\n            res.status(200).end();\r\n            return;\r\n        } catch (error) {\r\n            console.error('Error en OPTIONS:', error);\r\n            res.status(500).end();\r\n            return;\r\n        }\r\n    }\r\n    await runMiddleware(req, res, cors);\r\n};\r\n\r\nexport default corsMiddleware;"],"names":[],"mappings":";;;AAAA;;AAGA,MAAM,OAAO,CAAA,GAAA,iGAAA,CAAA,UAAI,AAAD,EAAE;IACd,SAAS;QAAC;QAAO;QAAQ;QAAO;QAAS;QAAQ;QAAU;KAAU;IACrE,QAAQ;IACR,aAAa;IACb,sBAAsB;IACtB,gBAAgB;QAAC;QAAgB;QAAiB;KAAmB;AACzE;AAEA,SAAS,cAAc,GAAmB,EAAE,GAAoB,EAAE,EAAY;IAC1E,OAAO,IAAI,QAAQ,CAAC,SAAS;QACzB,GAAG,KAAK,KAAK,CAAC;YACV,IAAI,kBAAkB,OAAO;gBACzB,OAAO,OAAO;YAClB;YACA,OAAO,QAAQ;QACnB;IACJ;AACJ;AAEA,MAAM,iBAAiB,OAAO,KAAqB;IAC/C,IAAI,IAAI,MAAM,KAAK,WAAW;QAC1B,IAAI;YACA,MAAM,cAAc,KAAK,KAAK;YAC9B,IAAI,MAAM,CAAC,KAAK,GAAG;YACnB;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,qBAAqB;YACnC,IAAI,MAAM,CAAC,KAAK,GAAG;YACnB;QACJ;IACJ;IACA,MAAM,cAAc,KAAK,KAAK;AAClC;uCAEe"}},
    {"offset": {"line": 410, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/pages/api/ApiRecordatorios.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport * as RecordatorioController from \"@/controller/RecordatorioController\";\r\nimport corsMiddleware from \"@/lib/corsMiddleware\";\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n    try {\r\n        await corsMiddleware(req, res);\r\n        \r\n        if (req.method === 'OPTIONS') {\r\n            return res.status(200).end();\r\n        }\r\n\r\n        const { method } = req;\r\n        const { id } = req.query;\r\n\r\n        switch (method) {\r\n            case \"GET\":\r\n                if (id) return RecordatorioController.getRecordatorio(req, res);\r\n                return RecordatorioController.getRecordatorios(req, res);\r\n            case \"POST\":\r\n                return RecordatorioController.createRecordatorio(req, res);\r\n            case \"PUT\":\r\n                if (id) return RecordatorioController.updateRecordatorio(req, res);\r\n                return res.status(400).json({ error: \"ID requerido para actualizar un recordatorio\" });\r\n            case \"DELETE\":\r\n                if (id) return RecordatorioController.deleteRecordatorio(req, res);\r\n                return res.status(400).json({ error: \"ID requerido para eliminar un recordatorio\" });\r\n            default:\r\n                return res.status(405).json({ error: \"Método no permitido\" });\r\n        }\r\n    } catch (error) {\r\n        console.error('Error en el handler:', error);\r\n        return res.status(500).json({ error: 'Error interno del servidor' });\r\n    }\r\n}"],"names":[],"mappings":";;;AACA;AACA;;;AAEe,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC3E,IAAI;QACA,MAAM,CAAA,GAAA,qHAAA,CAAA,UAAc,AAAD,EAAE,KAAK;QAE1B,IAAI,IAAI,MAAM,KAAK,WAAW;YAC1B,OAAO,IAAI,MAAM,CAAC,KAAK,GAAG;QAC9B;QAEA,MAAM,EAAE,MAAM,EAAE,GAAG;QACnB,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;QAExB,OAAQ;YACJ,KAAK;gBACD,IAAI,IAAI,OAAO,qIAAuB,eAAe,CAAC,KAAK;gBAC3D,OAAO,qIAAuB,gBAAgB,CAAC,KAAK;YACxD,KAAK;gBACD,OAAO,qIAAuB,kBAAkB,CAAC,KAAK;YAC1D,KAAK;gBACD,IAAI,IAAI,OAAO,qIAAuB,kBAAkB,CAAC,KAAK;gBAC9D,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,OAAO;gBAA+C;YACxF,KAAK;gBACD,IAAI,IAAI,OAAO,qIAAuB,kBAAkB,CAAC,KAAK;gBAC9D,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,OAAO;gBAA6C;YACtF;gBACI,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,OAAO;gBAAsB;QACnE;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA6B;IACtE;AACJ"}},
    {"offset": {"line": 459, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 535, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 541, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,kIAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,kIAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 568, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}