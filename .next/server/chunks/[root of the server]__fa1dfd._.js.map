{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/lib/Prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;uCAEhB"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/service/ExamenServices.ts"],"sourcesContent":["import prisma from \"@/lib/Prisma\";\r\nimport { examenes } from \"@prisma/client\";\r\n\r\nexport const getAllExamenes = async (): Promise<examenes[]> => {\r\n    return await prisma.examenes.findMany({\r\n        include: {\r\n            historial: {\r\n                include: {\r\n                    persona: true,\r\n                    profesional: true,\r\n                }\r\n            }\r\n        },\r\n    });\r\n};\r\n\r\nexport const getExamen = async (id: number): Promise<examenes | null> => {\r\n    const examen = await prisma.examenes.findUnique({\r\n        where: { cod_examen: id },\r\n        include: {\r\n            historial: {\r\n                include: {\r\n                    persona: true,\r\n                    profesional: true,\r\n                }\r\n            }\r\n        },\r\n    });\r\n    if (!examen) throw new Error(\"Examen no encontrado\");\r\n    return examen;\r\n};\r\n\r\nexport const createExamen = async (\r\n    data: Omit<examenes, \"cod_examen\">\r\n): Promise<examenes> => {\r\n    const { tipo, resultados, fecha, historial_id } = data;\r\n    if (!tipo || !resultados || !fecha || !historial_id)\r\n        throw new Error(\"Faltan datos requeridos\");\r\n\r\n    const historialExists = await prisma.historialmedico.findUnique({\r\n        where: { \r\n            cod_historial: historial_id,\r\n            estado: true \r\n        },\r\n    });\r\n    if (!historialExists) throw new Error(\"El historial médico no existe o está inactivo\");\r\n\r\n    return await prisma.examenes.create({\r\n        data,\r\n        include: {\r\n            historial: {\r\n                include: {\r\n                    persona: true,\r\n                    profesional: true,\r\n                }\r\n            }\r\n        },\r\n    });\r\n};\r\n\r\nexport const updateExamen = async (\r\n    id: number,\r\n    data: Partial<Omit<examenes, \"cod_examen\">>\r\n): Promise<examenes> => {\r\n    const existingExamen = await prisma.examenes.findUnique({\r\n        where: { cod_examen: id },\r\n    });\r\n    if (!existingExamen) throw new Error(\"Examen no encontrado\");\r\n\r\n    if (data.historial_id) {\r\n        const historialExists = await prisma.historialmedico.findUnique({\r\n            where: { \r\n                cod_historial: data.historial_id,\r\n                estado: true \r\n            },\r\n        });\r\n        if (!historialExists) throw new Error(\"El historial médico no existe o está inactivo\");\r\n    }\r\n\r\n    return await prisma.examenes.update({\r\n        where: { cod_examen: id },\r\n        data,\r\n        include: {\r\n            historial: {\r\n                include: {\r\n                    persona: true,\r\n                    profesional: true,\r\n                }\r\n            }\r\n        },\r\n    });\r\n};\r\n\r\nexport const deleteExamen = async (id: number): Promise<examenes> => {\r\n    const existingExamen = await prisma.examenes.findUnique({\r\n        where: { cod_examen: id },\r\n    });\r\n    if (!existingExamen) throw new Error(\"Examen no encontrado\");\r\n\r\n    return await prisma.examenes.delete({\r\n        where: { cod_examen: id },\r\n    });\r\n};"],"names":[],"mappings":";;;;;;;AAAA;;AAGO,MAAM,iBAAiB;IAC1B,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;QAClC,SAAS;YACL,WAAW;gBACP,SAAS;oBACL,SAAS;oBACT,aAAa;gBACjB;YACJ;QACJ;IACJ;AACJ;AAEO,MAAM,YAAY,OAAO;IAC5B,MAAM,SAAS,MAAM,6GAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;QAC5C,OAAO;YAAE,YAAY;QAAG;QACxB,SAAS;YACL,WAAW;gBACP,SAAS;oBACL,SAAS;oBACT,aAAa;gBACjB;YACJ;QACJ;IACJ;IACA,IAAI,CAAC,QAAQ,MAAM,IAAI,MAAM;IAC7B,OAAO;AACX;AAEO,MAAM,eAAe,OACxB;IAEA,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG;IAClD,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,cACnC,MAAM,IAAI,MAAM;IAEpB,MAAM,kBAAkB,MAAM,6GAAA,CAAA,UAAM,CAAC,eAAe,CAAC,UAAU,CAAC;QAC5D,OAAO;YACH,eAAe;YACf,QAAQ;QACZ;IACJ;IACA,IAAI,CAAC,iBAAiB,MAAM,IAAI,MAAM;IAEtC,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QAChC;QACA,SAAS;YACL,WAAW;gBACP,SAAS;oBACL,SAAS;oBACT,aAAa;gBACjB;YACJ;QACJ;IACJ;AACJ;AAEO,MAAM,eAAe,OACxB,IACA;IAEA,MAAM,iBAAiB,MAAM,6GAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;QACpD,OAAO;YAAE,YAAY;QAAG;IAC5B;IACA,IAAI,CAAC,gBAAgB,MAAM,IAAI,MAAM;IAErC,IAAI,KAAK,YAAY,EAAE;QACnB,MAAM,kBAAkB,MAAM,6GAAA,CAAA,UAAM,CAAC,eAAe,CAAC,UAAU,CAAC;YAC5D,OAAO;gBACH,eAAe,KAAK,YAAY;gBAChC,QAAQ;YACZ;QACJ;QACA,IAAI,CAAC,iBAAiB,MAAM,IAAI,MAAM;IAC1C;IAEA,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QAChC,OAAO;YAAE,YAAY;QAAG;QACxB;QACA,SAAS;YACL,WAAW;gBACP,SAAS;oBACL,SAAS;oBACT,aAAa;gBACjB;YACJ;QACJ;IACJ;AACJ;AAEO,MAAM,eAAe,OAAO;IAC/B,MAAM,iBAAiB,MAAM,6GAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;QACpD,OAAO;YAAE,YAAY;QAAG;IAC5B;IACA,IAAI,CAAC,gBAAgB,MAAM,IAAI,MAAM;IAErC,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QAChC,OAAO;YAAE,YAAY;QAAG;IAC5B;AACJ"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/controller/ExamenController.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport * as ExamenService from \"../service/ExamenServices\";\r\n\r\nexport const getExamenes = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    try {\r\n        const examenes = await ExamenService.getAllExamenes();\r\n        return res.status(200).json(examenes);\r\n    } catch (error) {\r\n        return res.status(500).json({ error: \"Error buscando exámenes\" });\r\n    }\r\n};\r\n\r\nexport const getExamen = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id } = req.query;\r\n    try {\r\n        const examen = await ExamenService.getExamen(Number(id));\r\n        return res.status(200).json(examen);\r\n    } catch (error) {\r\n        return res.status(404).json({ error: \"Examen no encontrado\" });\r\n    }\r\n};\r\n\r\nexport const createExamen = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    try {\r\n        const { tipo, resultados, fecha, historial_id } = req.body;\r\n        const newExamen = await ExamenService.createExamen({\r\n            tipo,\r\n            resultados,\r\n            fecha: new Date(fecha),\r\n            historial_id,\r\n        });\r\n        return res.status(201).json(newExamen);\r\n    } catch (error: any) {\r\n        return res.status(500).json({ error: error.message || \"Error creando examen\" });\r\n    }\r\n};\r\n\r\nexport const updateExamen = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id } = req.query;\r\n    try {\r\n        const { tipo, resultados, fecha, historial_id } = req.body;\r\n        const updatedExamen = await ExamenService.updateExamen(Number(id), {\r\n            tipo,\r\n            resultados,\r\n            fecha: fecha ? new Date(fecha) : undefined,\r\n            historial_id,\r\n        });\r\n        return res.status(200).json(updatedExamen);\r\n    } catch (error: any) {\r\n        return res.status(500).json({ error: error.message || \"Error actualizando examen\" });\r\n    }\r\n};\r\n\r\nexport const deleteExamen = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id } = req.query;\r\n    try {\r\n        const deletedExamen = await ExamenService.deleteExamen(Number(id));\r\n        return res.status(200).json({ \r\n            message: \"Examen eliminado correctamente\", \r\n            examen: deletedExamen \r\n        });\r\n    } catch (error) {\r\n        return res.status(500).json({ error: \"Error eliminando examen\" });\r\n    }\r\n};"],"names":[],"mappings":";;;;;;;AACA;;AAEO,MAAM,cAAc,OAAO,KAAqB;IACnD,IAAI;QACA,MAAM,WAAW,MAAM,0HAAc,cAAc;QACnD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAO;QACZ,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA0B;IACnE;AACJ;AAEO,MAAM,YAAY,OAAO,KAAqB;IACjD,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;IACxB,IAAI;QACA,MAAM,SAAS,MAAM,0HAAc,SAAS,CAAC,OAAO;QACpD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAO;QACZ,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAuB;IAChE;AACJ;AAEO,MAAM,eAAe,OAAO,KAAqB;IACpD,IAAI;QACA,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI;QAC1D,MAAM,YAAY,MAAM,0HAAc,YAAY,CAAC;YAC/C;YACA;YACA,OAAO,IAAI,KAAK;YAChB;QACJ;QACA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAY;QACjB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO,IAAI;QAAuB;IACjF;AACJ;AAEO,MAAM,eAAe,OAAO,KAAqB;IACpD,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;IACxB,IAAI;QACA,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI;QAC1D,MAAM,gBAAgB,MAAM,0HAAc,YAAY,CAAC,OAAO,KAAK;YAC/D;YACA;YACA,OAAO,QAAQ,IAAI,KAAK,SAAS;YACjC;QACJ;QACA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;IAChC,EAAE,OAAO,OAAY;QACjB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO,MAAM,OAAO,IAAI;QAA4B;IACtF;AACJ;AAEO,MAAM,eAAe,OAAO,KAAqB;IACpD,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;IACxB,IAAI;QACA,MAAM,gBAAgB,MAAM,0HAAc,YAAY,CAAC,OAAO;QAC9D,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YACxB,SAAS;YACT,QAAQ;QACZ;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA0B;IACnE;AACJ"}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/lib/corsMiddleware.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport Cors from \"cors\";\r\n\r\nconst cors = Cors({\r\n  methods: [\"GET\", \"POST\", \"PUT\", \"DELETE\"],\r\n  origin: \"*\",\r\n});\r\n\r\nfunction runMiddleware(req: NextApiRequest, res: NextApiResponse, fn: Function) {\r\n  return new Promise((resolve, reject) => {\r\n    fn(req, res, (result: any) => {\r\n      if (result instanceof Error) {\r\n        return reject(result);\r\n      }\r\n      return resolve(result);\r\n    });\r\n  });\r\n}\r\n\r\nexport default async function corsMiddleware(req: NextApiRequest, res: NextApiResponse) {\r\n  await runMiddleware(req, res, cors);\r\n}\r\n"],"names":[],"mappings":";;;AACA;;AAEA,MAAM,OAAO,CAAA,GAAA,iGAAA,CAAA,UAAI,AAAD,EAAE;IAChB,SAAS;QAAC;QAAO;QAAQ;QAAO;KAAS;IACzC,QAAQ;AACV;AAEA,SAAS,cAAc,GAAmB,EAAE,GAAoB,EAAE,EAAY;IAC5E,OAAO,IAAI,QAAQ,CAAC,SAAS;QAC3B,GAAG,KAAK,KAAK,CAAC;YACZ,IAAI,kBAAkB,OAAO;gBAC3B,OAAO,OAAO;YAChB;YACA,OAAO,QAAQ;QACjB;IACF;AACF;AAEe,eAAe,eAAe,GAAmB,EAAE,GAAoB;IACpF,MAAM,cAAc,KAAK,KAAK;AAChC"}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/pages/api/ApiExamen.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport * as ExamenController from \"@/controller/ExamenController\";\r\nimport corsMiddleware from \"@/lib/corsMiddleware\";\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n    await corsMiddleware(req, res);\r\n    const { method } = req;\r\n    const { id } = req.query;\r\n\r\n    switch (method) {\r\n        case \"GET\":\r\n            if (id) return ExamenController.getExamen(req, res);\r\n            return ExamenController.getExamenes(req, res);\r\n        case \"POST\":\r\n            return ExamenController.createExamen(req, res);\r\n        case \"PUT\":\r\n            if (id) return ExamenController.updateExamen(req, res);\r\n            return res.status(400).json({ error: \"ID requerido para actualizar un examen\" });\r\n        case \"DELETE\":\r\n            if (id) return ExamenController.deleteExamen(req, res);\r\n            return res.status(400).json({ error: \"ID requerido para eliminar un examen\" });\r\n        default:\r\n            return res.status(405).json({ error: \"Método no permitido\" });\r\n    }\r\n}"],"names":[],"mappings":";;;AACA;AACA;;;AAEe,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC3E,MAAM,CAAA,GAAA,qHAAA,CAAA,UAAc,AAAD,EAAE,KAAK;IAC1B,MAAM,EAAE,MAAM,EAAE,GAAG;IACnB,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;IAExB,OAAQ;QACJ,KAAK;YACD,IAAI,IAAI,OAAO,+HAAiB,SAAS,CAAC,KAAK;YAC/C,OAAO,+HAAiB,WAAW,CAAC,KAAK;QAC7C,KAAK;YACD,OAAO,+HAAiB,YAAY,CAAC,KAAK;QAC9C,KAAK;YACD,IAAI,IAAI,OAAO,+HAAiB,YAAY,CAAC,KAAK;YAClD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAAyC;QAClF,KAAK;YACD,IAAI,IAAI,OAAO,+HAAiB,YAAY,CAAC,KAAK;YAClD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAAuC;QAChF;YACI,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO;YAAsB;IACnE;AACJ"}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 352, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,2HAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,2HAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}