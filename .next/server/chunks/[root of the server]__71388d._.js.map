{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/lib/Prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\r\n\r\nconst prisma = new PrismaClient();\r\n\r\nexport default prisma;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;uCAEhB"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/service/UserService.ts"],"sourcesContent":["import prisma from \"@/lib/Prisma\";\r\nimport { usuario } from \"@prisma/client\";\r\n\r\nexport const getAllUsers = async (): Promise<usuario[]> => {\r\n    try {\r\n        return await prisma.usuario.findMany({\r\n            where: { estado: true },\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error al obtener todos los usuarios:\", error);\r\n        throw new Error(\"No se pudieron obtener los usuarios\");\r\n    }\r\n};\r\n\r\nexport const getUser = async (criteria: { id?: number; nombre?: string; apellido?: string; CID?: number }): Promise<usuario | null> => {\r\n    try {\r\n        const { id, nombre, apellido, CID } = criteria;\r\n\r\n        return await prisma.usuario.findFirst({\r\n            where: {\r\n                OR: [\r\n                    { cod_usuario: id },\r\n                    { nombre: nombre },\r\n                    { apellido: apellido },\r\n                    { CID: CID },\r\n                ],\r\n                estado: true,\r\n            },\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error al obtener un usuario:\", error);\r\n        throw new Error(\"No se pudo obtener el usuario\");\r\n    }\r\n};\r\n\r\nexport const createUser = async (data: Omit<usuario, \"cod_usuario\" | \"creadoEn\" | \"actualizadoEn\" | \"estado\">): Promise<usuario> => {\r\n    try {\r\n        return await prisma.usuario.create({\r\n            data,\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error al crear un usuario:\", error);\r\n        throw new Error(\"No se pudo crear el usuario\");\r\n    }\r\n};\r\n\r\nexport const updateUser = async (id: number, data: Partial<Omit<usuario, \"cod_usuario\" | \"creadoEn\" | \"actualizadoEn\">>): Promise<usuario> => {\r\n    try {\r\n        const existingUser = await prisma.usuario.findUnique({\r\n            where: { cod_usuario: id },\r\n        });\r\n\r\n        if (!existingUser || !existingUser.estado) {\r\n            throw new Error(\"Usuario no encontrado o está inactivo\");\r\n        }\r\n\r\n        return await prisma.usuario.update({\r\n            where: { cod_usuario: id },\r\n            data,\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error al actualizar un usuario:\", error);\r\n        throw new Error(\"No se pudo actualizar el usuario\");\r\n    }\r\n};\r\n\r\n\r\nexport const deleteUser = async (idusuario: number): Promise<usuario> => {\r\n    try {\r\n        const existingUser = await prisma.usuario.findUnique({\r\n            where: { cod_usuario: idusuario },\r\n        });\r\n\r\n        if (!existingUser || !existingUser.estado) {\r\n            throw new Error(\"Usuario no encontrado o ya está inactivo\");\r\n        }\r\n\r\n        return await prisma.usuario.update({\r\n            where: { cod_usuario: idusuario },\r\n            data: { estado: false },\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error al eliminar (inactivar) un usuario:\", error);\r\n        throw new Error(\"No se pudo inactivar el usuario\");\r\n    }\r\n};\r\n"],"names":[],"mappings":";;;;;;;AAAA;;AAGO,MAAM,cAAc;IACvB,IAAI;QACA,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;YACjC,OAAO;gBAAE,QAAQ;YAAK;QAC1B;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,wCAAwC;QACtD,MAAM,IAAI,MAAM;IACpB;AACJ;AAEO,MAAM,UAAU,OAAO;IAC1B,IAAI;QACA,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,GAAG;QAEtC,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,SAAS,CAAC;YAClC,OAAO;gBACH,IAAI;oBACA;wBAAE,aAAa;oBAAG;oBAClB;wBAAE,QAAQ;oBAAO;oBACjB;wBAAE,UAAU;oBAAS;oBACrB;wBAAE,KAAK;oBAAI;iBACd;gBACD,QAAQ;YACZ;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM,IAAI,MAAM;IACpB;AACJ;AAEO,MAAM,aAAa,OAAO;IAC7B,IAAI;QACA,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YAC/B;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,MAAM,IAAI,MAAM;IACpB;AACJ;AAEO,MAAM,aAAa,OAAO,IAAY;IACzC,IAAI;QACA,MAAM,eAAe,MAAM,6GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YACjD,OAAO;gBAAE,aAAa;YAAG;QAC7B;QAEA,IAAI,CAAC,gBAAgB,CAAC,aAAa,MAAM,EAAE;YACvC,MAAM,IAAI,MAAM;QACpB;QAEA,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YAC/B,OAAO;gBAAE,aAAa;YAAG;YACzB;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,mCAAmC;QACjD,MAAM,IAAI,MAAM;IACpB;AACJ;AAGO,MAAM,aAAa,OAAO;IAC7B,IAAI;QACA,MAAM,eAAe,MAAM,6GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,CAAC;YACjD,OAAO;gBAAE,aAAa;YAAU;QACpC;QAEA,IAAI,CAAC,gBAAgB,CAAC,aAAa,MAAM,EAAE;YACvC,MAAM,IAAI,MAAM;QACpB;QAEA,OAAO,MAAM,6GAAA,CAAA,UAAM,CAAC,OAAO,CAAC,MAAM,CAAC;YAC/B,OAAO;gBAAE,aAAa;YAAU;YAChC,MAAM;gBAAE,QAAQ;YAAM;QAC1B;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,6CAA6C;QAC3D,MAAM,IAAI,MAAM;IACpB;AACJ"}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/controller/UserController.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport * as UserServices from '../service/UserService'\r\nimport bcrypt from 'bcryptjs'\r\nimport { log } from \"console\";\r\n\r\nexport const getUsers = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    try {\r\n        const users = await UserServices.getAllUsers();\r\n        return res.status(200).json(users);\r\n    } catch (error) {\r\n        console.error(error);\r\n        return res.status(500).json({ error: 'Error buscando usuarios' });\r\n    }\r\n};\r\n\r\nexport const getUser = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id, nombre, apellido, CID } = req.query;\r\n\r\n    try {\r\n        const user = await UserServices.getUser({\r\n            id: id ? Number(id) : undefined,\r\n            nombre: nombre ? String(nombre) : undefined,\r\n            apellido: apellido ? String(apellido) : undefined,\r\n            CID: CID ? Number(CID) : undefined,\r\n        });\r\n        if (!user) {\r\n            return res.status(404).json({ error: \"Usuario no encontrado\" });\r\n        }\r\n        return res.status(200).json(user);\r\n    } catch (error) {\r\n        console.error(\"Error en getUser:\", error);\r\n        return res.status(500).json({ error: \"Error buscando usuario\" });\r\n    }\r\n};\r\n\r\nexport const createUser = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    try {\r\n        const { nombre, apellido, CID, telefono, email, rol, password } = req.body;\r\n        if (!nombre || !apellido || !CID || !telefono || !email || !rol || !password) {\r\n            return res.status(400).json({ error: \"Faltan datos requeridos\" });\r\n        }\r\n        const hashedPassword = await bcrypt.hash(password, 10);\r\n        const newUser = await UserServices.createUser({ nombre, apellido, CID, telefono, email, rol, password: hashedPassword });\r\n        return res.status(201).json(newUser);\r\n    } catch (error) {\r\n        console.error(\"Error en createUser:\", error);\r\n        return res.status(500).json({ error: \"Error creando usuario\" });\r\n    }\r\n};\r\n\r\n\r\nexport const updateUser = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id } = req.query;\r\n    try {\r\n        console.log(req.query)\r\n        if (!id) {\r\n            return res.status(400).json({ error: \"El ID es requerido para actualizar un usuario\" });\r\n        }\r\n        const { nombre, apellido, CID, telefono, email, rol, password } = req.body;\r\n        if (!nombre && !apellido && !CID && !telefono && !email && !rol && !password) {\r\n            return res.status(400).json({ error: \"No se proporcionaron datos para actualizar\" });\r\n        }\r\n        const updatedData = {\r\n            nombre, apellido, CID, telefono, email, rol, password: password ? await bcrypt.hash(password, 10) : undefined,\r\n        };\r\n        const updatedUser = await UserServices.updateUser(Number(id), updatedData);\r\n        return res.status(200).json(updatedUser);\r\n    } catch (error) {\r\n        console.error(\"Error en updateUser:\", error);\r\n        return res.status(500).json({ error: \"Error actualizando usuario\" });\r\n    }\r\n};\r\n\r\n\r\nexport const deleteUser = async (req: NextApiRequest, res: NextApiResponse) => {\r\n    const { id } = req.query;\r\n    try {\r\n        if (!id) {\r\n            return res.status(400).json({ error: \"El ID es requerido para eliminar un usuario\" });\r\n        }\r\n        const deletedUser = await UserServices.deleteUser(Number(id));\r\n        return res.status(200).json({ message: \"Usuario eliminado correctamente\", usuario: deletedUser });\r\n    } catch (error) {\r\n        console.error(\"Error en deleteUser:\", error);\r\n        return res.status(500).json({ error: \"Error eliminando usuario\" });\r\n    }\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/lib/corsMiddleware.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport Cors from \"cors\";\r\n\r\nconst cors = Cors({\r\n  methods: [\"GET\", \"POST\", \"PUT\", \"DELETE\"],\r\n  origin: \"*\",\r\n});\r\n\r\nfunction runMiddleware(req: NextApiRequest, res: NextApiResponse, fn: Function) {\r\n  return new Promise((resolve, reject) => {\r\n    fn(req, res, (result: any) => {\r\n      if (result instanceof Error) {\r\n        return reject(result);\r\n      }\r\n      return resolve(result);\r\n    });\r\n  });\r\n}\r\n\r\nexport default async function corsMiddleware(req: NextApiRequest, res: NextApiResponse) {\r\n  await runMiddleware(req, res, cors);\r\n}\r\n"],"names":[],"mappings":";;;AACA;;AAEA,MAAM,OAAO,CAAA,GAAA,iGAAA,CAAA,UAAI,AAAD,EAAE;IAChB,SAAS;QAAC;QAAO;QAAQ;QAAO;KAAS;IACzC,QAAQ;AACV;AAEA,SAAS,cAAc,GAAmB,EAAE,GAAoB,EAAE,EAAY;IAC5E,OAAO,IAAI,QAAQ,CAAC,SAAS;QAC3B,GAAG,KAAK,KAAK,CAAC;YACZ,IAAI,kBAAkB,OAAO;gBAC3B,OAAO,OAAO;YAChB;YACA,OAAO,QAAQ;QACjB;IACF;AACF;AAEe,eAAe,eAAe,GAAmB,EAAE,GAAoB;IACpF,MAAM,cAAc,KAAK,KAAK;AAChC"}},
    {"offset": {"line": 316, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/src/pages/api/ApiUser.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from \"next\";\r\nimport * as UserController from \"@/controller/UserController\";\r\nimport corsMiddleware from \"@/lib/corsMiddleware\";\r\n\r\nexport default async function handler(req: NextApiRequest, res: NextApiResponse) {\r\n    try {\r\n        await corsMiddleware(req, res);\r\n        const { method } = req;\r\n        const { id, nombre, apellido, CID, telefono, email } = req.query;\r\n\r\n        switch (method) {\r\n            case \"GET\":\r\n                if (id || nombre || apellido || CID || telefono || email) {\r\n                    return await UserController.getUser(req, res);\r\n                } else {\r\n                    return await UserController.getUsers(req, res);\r\n                }\r\n\r\n            case \"POST\":\r\n                return await UserController.createUser(req, res);\r\n\r\n            case \"PUT\":\r\n                if (id) {\r\n                    return await UserController.updateUser(req, res);\r\n                } else {\r\n                    return res.status(400).json({ message: \"El ID es requerido para realizar la actualización\" });\r\n                }\r\n\r\n            case \"DELETE\":\r\n                if (id) {\r\n                    return await UserController.deleteUser(req, res);\r\n                } else {\r\n                    return res.status(400).json({ message: \"El ID es requerido para eliminar un usuario\" });\r\n                }\r\n\r\n            default:\r\n                return res.status(405).json({ message: \"Método no permitido\" });\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error en la API handler:\", error);\r\n        return res.status(500).json({ error: \"Error interno del servidor\" });\r\n    }\r\n}\r\n\r\n"],"names":[],"mappings":";;;AACA;AACA;;;AAEe,eAAe,QAAQ,GAAmB,EAAE,GAAoB;IAC3E,IAAI;QACA,MAAM,CAAA,GAAA,qHAAA,CAAA,UAAc,AAAD,EAAE,KAAK;QAC1B,MAAM,EAAE,MAAM,EAAE,GAAG;QACnB,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,IAAI,KAAK;QAEhE,OAAQ;YACJ,KAAK;gBACD,IAAI,MAAM,UAAU,YAAY,OAAO,YAAY,OAAO;oBACtD,OAAO,MAAM,6HAAe,OAAO,CAAC,KAAK;gBAC7C,OAAO;oBACH,OAAO,MAAM,6HAAe,QAAQ,CAAC,KAAK;gBAC9C;YAEJ,KAAK;gBACD,OAAO,MAAM,6HAAe,UAAU,CAAC,KAAK;YAEhD,KAAK;gBACD,IAAI,IAAI;oBACJ,OAAO,MAAM,6HAAe,UAAU,CAAC,KAAK;gBAChD,OAAO;oBACH,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;wBAAE,SAAS;oBAAoD;gBAC/F;YAEJ,KAAK;gBACD,IAAI,IAAI;oBACJ,OAAO,MAAM,6HAAe,UAAU,CAAC,KAAK;gBAChD,OAAO;oBACH,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;wBAAE,SAAS;oBAA8C;gBACzF;YAEJ;gBACI,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,SAAS;gBAAsB;QACrE;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAA6B;IACtE;AACJ"}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n  } else if (process.env.TURBOPACK) {\n    module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n  } else {\n    module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1CH,OAAOC,OAAO,GAAGC,QAAQ;IAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACM,SAAS,EAAE;;IAIlC;AACF","ignoreList":[0]}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0]}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 420, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0]}},
    {"offset": {"line": 447, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 453, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/SrJordy/Desktop/Proyecto%20CTIS/backend-ctsi/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,yHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,yHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0]}},
    {"offset": {"line": 480, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}